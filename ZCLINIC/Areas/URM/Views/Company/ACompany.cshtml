

@using ZCLINIC
@model ZCLINIC.Areas.URM.Models.Company

@{

    string URL = Model == null ? "/URM/Company/SaveCompany" : "/URM/Company/UpdateCompany";

    string image = Model == null || Model.Image_Picture == null ? "" : "data:image/png;base64," + Convert.ToBase64String(Model.Image_Picture);



}

<form class="form-horizontal" method="post" id="" data-url="@URL" data-display="Master" data-rurl="/URM/Company">

    @Html.HiddenFor(m => m.TenantId)
    <div class="col-lg-12">
        <div class="col-lg-8">

            <div class="col-lg-10">
                <div class="row">

                    <div class="form-group form-group-xs">
                        <label class="control-label col-sm-4">Company Id<b class="wysiwyg-color-red">*</b></label>
                        <div class="form-group has-feedback col-sm-4">
                            @Html.TextBoxFor(m => m.TenantId, new { @class = "form-control input-group", type = "text", @readonly = "readonly" })
                            <div class="form-control-feedback"><i class=""></i></div>
                        </div>
                    </div>

                    <div class="form-group form-group-xs">
                        <label class="control-label col-sm-4">Company Name <b class="wysiwyg-color-red">*</b></label>
                        <div class="form-group has-feedback col-sm-8">
                            @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control input-group", placeholder = "Company Name", type = "text", required = "required" })
                            <div class="form-control-feedback"><i class=""></i></div>
                        </div>
                    </div>
                    <div class="form-group form-group-xs">
                        <label class="control-label col-sm-4">Address<b class="wysiwyg-color-red">*</b></label>
                        <div class="form-group has-feedback col-sm-8">
                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control input-group", placeholder = "Address", type = "text", required = "required" })
                            <div class="form-control-feedback"><i class=""></i></div>
                        </div>
                    </div>

                    <div class="form-group form-group-xs">
                        <label class="control-label col-sm-4">PhoneNo<b class="wysiwyg-color-red">*</b></label>
                        <div class="form-group has-feedback col-sm-8">
                            @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control input-group", placeholder = "PhoneNo", type = "text", required = "required" })
                            <div class="form-control-feedback"><i class=""></i></div>
                        </div>
                    </div>


                    <div class="form-group form-group-xs">
                        <label class="control-label col-sm-4">CellNo<b class="wysiwyg-color-red">*</b></label>
                        <div class="form-group has-feedback col-sm-8">
                            @Html.TextBoxFor(m => m.CellNo, new { @class = "form-control input-group", placeholder = "CellNo", type = "text", required = "required" })
                            <div class="form-control-feedback"><i class=""></i></div>
                        </div>
                    </div>

                    <div class="form-group form-group-xs">
                        <label class="control-label col-sm-4">NTNNo<b class="wysiwyg-color-red">*</b></label>
                        <div class="form-group has-feedback col-sm-8">
                            @Html.TextBoxFor(m => m.NTNNo, new { @class = "form-control input-group", placeholder = "NTNNo", type = "text", required = "required" })
                            <div class="form-control-feedback"><i class=""></i></div>
                        </div>
                    </div>



                    <div class="form-group form-group-xs">
                        <label class="control-label col-sm-4">STRNO<b class="wysiwyg-color-red">*</b></label>
                        <div class="form-group has-feedback col-sm-8">
                            @Html.TextBoxFor(m => m.STRNO, new { @class = "form-control input-group", placeholder = "STRNO", type = "text", required = "required" })
                            <div class="form-control-feedback"><i class=""></i></div>
                        </div>
                    </div>

                    <div class="form-group form-group-xs">
                        <label class="control-label col-sm-4">Expair Date<b class="wysiwyg-color-red">*</b></label>
                        <div class="form-group has-feedback col-sm-8">
                            @Html.TextBoxFor(m => m.Exdate, new { @class = "form-control", type = "date", required = "required" })
                            <div class="form-control-feedback"><i class=""></i></div>
                        </div>
                    </div>


                    <div class="form-group form-group-xs">
                        <label class="control-label col-sm-4">AppId<b class="wysiwyg-color-red">*</b></label>
                        <div class="form-group has-feedback col-sm-8">
                            @Html.TextBoxFor(m => m.AppId, new { @class = "form-control input-group", placeholder = "STRNO", type = "text", required = "required" })
                            <div class="form-control-feedback"><i class=""></i></div>
                        </div>
                    </div>








                </div>
            </div>



        </div>




        <div class="col-lg-4">

            @Html.HiddenFor(m => m.Logo)

            <div class="col-lg-12">


         
                <div class="form-group col-sm-9">
                    <input type="file" class="file-input" data-show-remove="true" accept="image/*" data-show-upload="false" data-show-caption="false" data-browse-class="btn bg-slate btn-xs" data-remove-class="btn btn-warning btn-xs" />
                </div>
            </div>

        </div>


           
        
    </div>


        <div class="modal-footer no-padding no-border">
            <button type="button" class="btn btn-danger btn-xs" data-dismiss="modal"><i class="icon-cross"></i>Close</button>
            <button type="button" data-submit="true" class="btn btn-primary btn-xs"><i class="icon-floppy-disk position-left"></i>Save</button>
        </div>



</form>
<script>


   // document.getElementById('Exdate').valueAsDate = new Date();


    if ($('#TenantId').val() > 0) {

       
    }
    else {

        document.getElementById('Exdate').valueAsDate = new Date();


        //$('#UserName').val($('#personName').text());
        //$('#UserId').val($('#personId').val())


    }



    $('.file-input').change(function (e) {

        debugger;
        if (this.files.length == 0) {
            $('#Logo').val("");

            return;
        }



        var filename = e.target.value;

        var allowed_extensions = new Array("jpg", "png", "jpeg");
        var file_extension = filename.split('.').pop().toLowerCase();
        var result = false;
        for (var i = 0; i <= allowed_extensions.length; i++) {
            if (allowed_extensions[i] == file_extension) {
                result = true;
                break;
            } else {
                result = false
            }
        }
        if (result === false) {
            ErrorAlert("Upload Only Image")
        } else {


            var formData = new FormData();
            formData.append("file", e.target.files[0]);
            $.ajax({
                url: "/URM/Company/UploadImage",
                type: 'POST',
                cache: false,
                contentType: false,
                processData: false,
                data: formData,
                success: function (response) {
                    $('#Logo').val(response);


                }
            });



        }



    })


    var image = $('#Logo').val() == "" || $('#Logo').val() == null ? "" : "/Logo/" + $('#Logo').val()






    //var image = $('#PhotoPath').val() == "" || $('#PhotoPath').val() == null ? "" : "D:/Photo/cc4b1277-74e9-4fd5-b2f7-bacbc1613716_5d079167-28a9-4db0-b579-94ffaabf7889_tree-736885__480.jpg"

    debugger;
    $('.file-input').fileinput({
        browseLabel: 'Select',
        browseIcon: '<i class="icon-image2 position-left"></i>',
        removeIcon: '<i class="icon-cross3"></i>',
        initialPreview: image,
        initialPreviewAsData: true,

    });
    $('body').find('.fileinput-remove,.fileinput-remove-button').click(function () {
        $('#Logo').val("");
    })












</script>