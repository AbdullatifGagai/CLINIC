@model ZCLINIC.Areas.URM.Models.User
@using ZCLINIC;

@{
    string URL = Model == null ? "/URM/User/SaveUser" : "/URM/User/UpdateUser";

}

<form class="" method="post" id="userform" data-url="@URL" data-rurl="/URM/User" data-display="User">
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.PersonId)


    <div class="row">
        @*<div class="form-group form-group-xs has-feedback col-md-4">
            <label>First Name</label>
            @Html.TextBoxFor(m => m.per.FirstName, new { type = "text", @placeholder = "First Name", required = "required", @class = "form-control", autofocus = "autofocus" })
            <div class="form-control-feedback"><i class=""></i></div>
        </div>

        <div class="form-group form-group-xs has-feedback col-md-4">
            <label>Last Name</label>
            @Html.TextBoxFor(m => m.per.LastName, new { @class = "form-control", placeholder = "Last Name", required = "required", type = "text" })
            <div class="form-control-feedback"><i class=""></i></div>
        </div>*@

        @*<div class="form-group form-group-xs col-md-6">
            <label>Employee</label>
            <div class="">
                @{
                    List<ZCLINIC.Areas.Master.Models.Employee> employees = new ZCLINIC.Areas.Master.Models.Employee().Master_EmployeeGetAll(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());
                }
                @Html.DropDownList("EmpId", employees.Select(p => new SelectListItem() { Text = p.EmployeeName, Value = p.EmployeeId.ToString() }), new { @class = "bootstrap-select border-blue-800 border-lg", data_style = "btn-default btn-xs", data_width = "100%", id = "Role" })
            </div>
        </div>*@




        @*<div class="form-group form-group-xs col-md-4">
            <label>Gender</label>


            @{
                List<SelectListItem> genders = new List<SelectListItem>();
                genders.Add(new SelectListItem
                {
                    Text = "Male",
                    Value = "1"
                });
                genders.Add(new SelectListItem
                {
                    Text = "Female",
                    Value = "0",
                });
            }

            @Html.DropDownListFor(m => m.per.IsMale, genders, "-- Select Gender --", new { @class = "form-control", data_style = "btn-default btn-xs", data_width = "100%", id = "gender" })


        </div>*@

     
        <div class="form-group form-group-xs col-md-6">
            <label>Role</label>
            <div class="">
                @{
                    List<ZCLINIC.Areas.URM.Models.User> role = new ZCLINIC.Areas.URM.Models.User().URM_RoleGetAll(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());
                }
                @Html.DropDownList("RoleId", role.Select(p => new SelectListItem() { Text = p.RoleName, Value = p.RoleId.ToString() }), new { @class = "bootstrap-select border-blue-800 border-lg", data_style = "btn-default btn-xs", data_width = "100%", id = "Role" })
            </div>
        </div>

        <div class="form-group form-group-xs has-feedback col-md-6">
            <label>Username</label>
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", type = "text", placeholder = "Username", id = "uname" })
            <div class="form-control-feedback"><i class=""></i></div>
        </div>

        <div class="form-group form-group-xs has-feedback col-md-6">
            <label>Password</label>
            @Html.TextBoxFor(m => m.UPassword, new { @class = "form-control", type = "password", placeholder = "Password" })
            <div class="form-control-feedback"><i class=""></i></div>
        </div>

    </div>


    <div class="modal-footer no-padding no-border">
        <button type="button" class="btn btn-danger btn-xs" data-dismiss="modal"><i class="icon-cross"></i>Close</button>
        <button type="button" data-submit="true" class="btn btn-primary btn-xs"><i class="icon-floppy-disk position-left"></i>Save</button>
    </div>
</form>
