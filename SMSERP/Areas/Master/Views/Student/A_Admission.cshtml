@using ZCLINIC
@model ZCLINIC.Areas.Master.Models.Student

@{
    string URL = Model == null ? "/Master/Student/SaveStudent" : "/Master/Student/UpdateStudent";
    int counter = 0;
}

<style>
    /*Remove Arrows/Spinners from type number*/
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<form method="post" data-url="@URL" data-rurl="/Master/Student/AdmissionIndex" data-script="/assets/Areas/Master/Student/Index.js" data-display="Admission">



    @Html.HiddenFor(m => m.GRId)


    <div class="row">



        <div class="form-group form-group-xs col-md-12">

            <div class="form-group form-group-xs col-md-2">
                <label>GrNo<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.Grno, new { @class = "form-control", type = "text", @readonly = true })

            </div>

            <div class="form-group form-group-xs col-md-4">
                <label>Student Name<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.StudentName, new { @class = "form-control", type = "text", required = "required" })

            </div>

            <div class="form-group form-group-xs col-md-2">
                <label>S/O,D/O<b class="wysiwyg-color-red"></b></label>
                @{

                    var Int = new List<(int Id, string Name)>();
                    //Int.Add((Id: 0, Name: "Select"));
                    Int.Add((Id: 1, Name: "S/O"));
                    Int.Add((Id: 2, Name: "D/O"));
                    Int.Add((Id: 3, Name: "W/O"));


                }
                @Html.DropDownList("Int", Int.Select(p => new SelectListItem() { Text = p.Name, Value = p.Name.ToString() }), new { @class = "form-control", data_style = "btn-default btn-xs", tabindex = '4', data_search = "true", data_width = "100%" })

            </div>






            <div class="form-group form-group-xs col-md-4">
                <label>Father  Name<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.FatherName, new { @class = "form-control", type = "text", required = "required" })

            </div>









        </div>
    </div>






    <div class="row">



        <div class="form-group form-group-xs col-md-12">

            <div class="form-group form-group-xs col-md-4">
                <label>SurName<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.SurName, new { @class = "form-control", type = "text", required = "required" })

            </div>
            <div class="form-group form-group-xs col-md-4">
                <label>Residential Address<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.RAdd, new { @class = "form-control", type = "text", required = "required" })

            </div>

            <div class="form-group form-group-xs col-md-4">
                <label>Mobile No<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.CellNo, new { @class = "form-control", type = "text", required = "required" })

            </div>









        </div>
    </div>

    <div class="row">



        <div class="form-group form-group-xs col-md-12">

            <div class="form-group form-group-xs col-md-3">
                <label>Qulification<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.Qulification, new { @class = "form-control", type = "text", required = "required" })

            </div>


            <div class="form-group form-group-xs col-md-3">
                <label>Profession<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.Profession, new { @class = "form-control", type = "text", required = "required" })

            </div>



            <div class="form-group form-group-xs col-md-3">
                <label>Panel<b class="wysiwyg-color-red"></b></label>
                @{
                    List<ZCLINIC.Areas.Master.Models.Panel> Panel = new ZCLINIC.Areas.Master.Models.Panel().Master_PanelGetAll(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());

                }
                @Html.DropDownList("PanelId", Panel.Select(s => new SelectListItem() { Text = s.PName, Value = s.PId.ToString() }), new { @class = "form-control " })

            </div>



            <div class="form-group form-group-xs col-md-3">
                <label>Email Address<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.email_add, new { @class = "form-control", type = "text", required = "required" })

            </div>






        </div>
    </div>
    <div class="row">



        <div class="form-group form-group-xs col-md-12">

            <div class="form-group form-group-xs col-md-3">
                <label>Phone  No<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control", type = "text", required = "required" })

            </div>

            <div class="form-group form-group-xs col-md-2">
                <label>Date Of Brith<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.DOBrith, new { @class = "form-control", type = "date", required = "required" })

            </div>




            <div class="form-group form-group-xs col-md-2">
                <label>Admission Date<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.AdDate, new { @class = "form-control", type = "date", required = "required" })

            </div>










            <div class="form-group form-group-xs col-md-3">
                <label>Status<b class="wysiwyg-color-red"></b></label>
                @{

                    var Status = new List<(int Id, string Name)>();
                    //Status.Add((Id: 0, Name: "Select StatUs"));
                    Status.Add((Id: 1, Name: "Present"));
                    Status.Add((Id: 2, Name: "Left"));



                }
                @Html.DropDownList("LeaveF", Status.Select(p => new SelectListItem() { Text = p.Name, Value = p.Id.ToString() }), new { @class = "form-control", data_style = "btn-default btn-xs", tabindex = '4', data_search = "true", data_width = "100%" })

            </div>



            <div class="form-group form-group-xs col-md-2">
                <label>ReceiptId<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.RollNo, new { @class = "form-control", type = "text", required = "required" })

            </div>


        </div>
    </div>







    <div class="row">



        <div class="form-group form-group-xs col-md-12">






            <div class="form-group form-group-xs col-md-3">
                <label>Month Name<b class="wysiwyg-color-red"></b></label>

                @{
                    List<ZCLINIC.Areas.Master.Models.AcadmicYear> AcadmicYear = new ZCLINIC.Areas.Master.Models.AcadmicYear().Master_AcadmicYearGetAll(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());

                }
                @Html.DropDownList("MonthId", AcadmicYear.Select(s => new SelectListItem() { Text = s.FeesTerm, Value = s.Id.ToString() }), new { @class = "form-control " })




            </div>
            <div class="form-group form-group-xs col-md-2">
                <label>Total  Amount<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.OpenAmt, new { @class = "form-control", type = "text", required = "required" })

            </div>
            <div class="form-group form-group-xs col-md-2">
                <label>GroupId<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.group_id, new { @class = "form-control", type = "text", required = "required", @readonly = true })

            </div>
            <div class="form-group form-group-xs col-md-3">
                <label>GroupName<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.group_name, new { @class = "form-control", type = "text", required = "required", @readonly = true })

            </div>




            <div class="form-group form-group-xs mt-20 col-md-1">
                <a class="btn btn-info btn-sm" id="AddItemBtn"><i class="icon-add mr-5"></i>Add Group</a>
            </div>





        </div>
    </div>

    <div class="row">



        <div class="form-group form-group-xs col-md-12">

            <div class="form-group form-group-xs col-md-3">
                <label>Remarks<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control", type = "text"})

            </div>
            <div class="form-group form-group-xs col-md-3">
                <label>RefId<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.RefId, new { @class = "form-control", type = "text",  @readonly = true })

            </div>




        </div>
    </div>











    <div class="modal-footer mt-10 no-padding no-border">



        <button type="button" class="btn btn-danger btn-xs" data-dismiss="modal"><i class="icon-cross"></i>Close</button>
        <button type="button" data-submit="true" class="btn btn-primary  btn-xs"><i class="icon-floppy-disk position-left"></i>Save</button>
        @* <button type="button" data-submit="" class="btn btn-primary btn-xs SaveBtn"><i class="icon-floppy-disk position-left"></i>Save</button>*@

    </div>

</form>



<script>
   
    $('#CellNo').formatter({
        pattern: '{{9999}}-{{9999999}}'
    });

    $('#PhoneNo').formatter({
        pattern: '{{9999}}-{{9999999}}'
    });

    if ($('#GRId').val() > 0) {

      
    }
    else {

        document.getElementById('AdDate').valueAsDate = new Date();
        document.getElementById('DOBrith').valueAsDate = new Date();


        //$('#UserName').val($('#personName').text());
        //$('#UserId').val($('#personId').val())


    }




    $('#AddItemBtn').click(() => {


        GetJSONRequest('/Master/Levels/Master_LevelsGetActiveAll', 'GET', '', function (data) {

            if (data && data.length > 0) {


                debugger;

                AllowSearch(data);


            }


            else

                ErrorAlert("No Data Found");
        })







    })



    


















    function AllowSearch(data) {

        debugger;
        //$('#UnitId').val('');
        //$('#UnitName').val('');
        //$('#PlotNo').val('');
        //$('#SName').val('');


        $('#SModal').modal('show');
        $('.modal-dialog').addClass('modal-lg');

        $('#SModalTitle').text('Student List');
        let markup = `<div class="row">
         
                   <div class="col-sm-3">
                    <div class="input-group ">
                        <input type="text" class="form-control datasearch" placeholder="Filter" id="FilterInputoptpurchase">
                        <span class="input-group-addon bg-blue-800"><i class="icon-search4"></i></span>
                    </div>
                </div></div><table id="myTable" class="table datatable-basic table-xxs table-md table-bordered table-striped table-hover bg-lightgray dataTables_scrollBody">
				<thead>
					<tr class="bg-blue-800">
                        <th>GroupId</th>
                        <th>GroupCode</th>

                        <th>Group Name</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>TimeIn</th>
                        <th>TimeOut</th>
						
						
                        
                        <th>Actions</th>

					</tr>
				</thead><tbody>`;

        data.forEach((item) => {

            markup += `<tr><td>${item.LId}</td><td>${item.LCode}</td><td>${item.LevelName}</td><td>${item.Sdate}</td><td>${item.Edate}</td><td>${item.TimeIn}</td><td>${item.TimeOut}</td><td><button type="button" class="selectAllowId btn btn-primary" id=${item.LId}>Select</button></td></tr>`

        })
        markup += `</tbody>`;
        $('#SModalBody').empty();

        $('#SModalBody').append(markup);

        $.extend($.fn.dataTable.defaults, {
            responsive: true,
            autoWidth: false,

            dom: '<"datatable-header"><"datatable-scroll-wrap"t><"datatable-footer"lip>',

        });

        purchasetable = $('.datatable-basic').DataTable({

            buttons: {
                dom: {
                    button: {
                        className: 'btn btn-default'
                    }
                },
                buttons: [

                    'excelHtml5',
                    'csvHtml5',
                    {
                        extend: 'pdfHtml5',
                        orientation: 'portrait',
                        pageSize: 'A4',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        },
                        customize: function (doc) {
                            doc.defaultStyle.fontSize = 7;
                        }
                    }]

            },
            language: {
                search: '<span>Filter:</span> _INPUT_',
                lengthMenu: '_MENU_',
            },
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]

        });

        $('#SModalBody').delegate('#FilterInputoptpurchase', 'keyup', function () {
            debugger;

            purchasetable.search(this.value).draw();
        });

        $('#SModal').on('hidden.bs.modal', function (e) {
            debugger;
            purchasetable.search('').draw();
        })
    }
    $('#SModalBody').delegate('.selectAllowId', 'click', function () {

        $('#group_id').val($(this).closest('tr').children().eq(0).text());
        $('#group_name').val($(this).closest('tr').children().eq(2).text());

        $('#SModal').modal('hide');
    })




    $('#RollNo').keyup(function (e) {


        var Id = $(this).val();


        if (Id != '' && e.keyCode == 13)
            GetPurchaseByOrderNo(Id);
    })
    function GetPurchaseByOrderNo(Id) {

        GetJSONRequest('/Transaction/MisReceipt/GetMisReceiptInfo', 'GET', { Id }, data => {
            //  console.log(data);


            if (data && data.length > 0) {



                $('#StudentName').val(data[0].Name);
                $('#CellNo').val(data[0].MobileNo);
                $('#group_id').val(data[0].group_id);
                $('#group_name').val(data[0].group_name);
               // $('#RollNo').attr('disabled', 'true');
                //$('#Remarks').val(data[0].Remarks);

                //const refid = data[0].RefId || 0;
                //$('#RefId').val(refid).change();

                //  return;
            }

            else {
                ErrorAlert('No Record Found');
                $('#StudentName').val('');
                $('#CellNo').val('');
                $('#group_id').val('');
                $('#group_name').val('');


            }

        })


    }























</script>




