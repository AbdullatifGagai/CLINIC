@using ZCLINIC
@model ZCLINIC.Areas.Master.Models.Student

@{
    string URL = Model == null ? "/Master/Student/SaveStudent" : "/Master/Student/UpdateStudent";
    int counter = 0;
}

<style>
    /*Remove Arrows/Spinners from type number*/
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<form method="post" data-url="@URL" data-rurl="/Master/Student/AdmissionSAIIndex"  data-script="/assets/Areas/Master/Student/IndexSai.js" data-display="Bank Payment Voucher">



    @Html.HiddenFor(m => m.GRId)


    <div class="row">



        <div class="form-group form-group-xs col-md-12">

            <div class="form-group form-group-xs col-md-2">
                <label>GrNo<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.Grno, new { @class = "form-control", type = "text", @readonly = true })

            </div>

            <div class="form-group form-group-xs col-md-4">
                <label>Student Name<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.StudentName, new { @class = "form-control", type = "text", required = "required" })

            </div>

            <div class="form-group form-group-xs col-md-2">
                <label>S/O,D/O<b class="wysiwyg-color-red"></b></label>
                @{

                    var Int = new List<(int Id, string Name)>();
                    Int.Add((Id: 0, Name: "Select"));
                    Int.Add((Id: 1, Name: "S/O"));
                    Int.Add((Id: 2, Name: "D/O"));


                }
                @Html.DropDownList("Int", Int.Select(p => new SelectListItem() { Text = p.Name, Value = p.Name.ToString() }), new { @class = "form-control", data_style = "btn-default btn-xs", tabindex = '1', data_search = "true", data_width = "100%"})

            </div>






            <div class="form-group form-group-xs col-md-4">
                <label>Father  Name<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.FatherName, new { @class = "form-control", type = "text", required = "required" })

            </div>









        </div>
    </div>






    <div class="row">



        <div class="form-group form-group-xs col-md-12">

            <div class="form-group form-group-xs col-md-4">
                <label>SurName<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.SurName, new { @class = "form-control", type = "text", required = "required" })

            </div>
            <div class="form-group form-group-xs col-md-4">
                <label>Residential Address<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.RAdd, new { @class = "form-control", type = "text", required = "required" })

            </div>

            <div class="form-group form-group-xs col-md-2">
                <label>Religion<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.Religion, new { @class = "form-control", type = "text", required = "required" })

            </div>
            <div class="form-group form-group-xs col-md-2">
                <label>Mobile No<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.CellNo, new { @class = "form-control", type = "text", required = "required" })

            </div>









        </div>
    </div>




    <div class="row">



        <div class="form-group form-group-xs col-md-12">

            <div class="form-group form-group-xs col-md-2">
                <label>Phone  No<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control", type = "text", required = "required" })

            </div>

            <div class="form-group form-group-xs col-md-2">
                <label>Date Of Brith<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.DOBrith, new { @class = "form-control", type = "date", required = "required" })

            </div>


            <div class="form-group form-group-xs col-md-2">
                <label>Shift<b class="wysiwyg-color-red"></b></label>
                @{

                    var shift = new List<(int Id, string Name)>();
                    shift.Add((Id: 0, Name: "Select Shift"));
                    shift.Add((Id: 1, Name: "MOR"));
                    shift.Add((Id: 2, Name: "EVE"));


                }
                @Html.DropDownList("Shift", shift.Select(p => new SelectListItem() { Text = p.Name, Value = p.Name.ToString() }), new { @class = "form-control", data_style = "btn-default btn-xs", tabindex = '4', data_search = "true", data_width = "100%" })

            </div>



            <div class="form-group form-group-xs col-md-2">
                <label>Admission Date<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.AdDate, new { @class = "form-control", type = "date", required = "required" })

            </div>


            <div class="form-group form-group-xs col-md-2">
                <label>Section<b class="wysiwyg-color-red"></b></label>
                @{

                    var Sec = new List<(int Id, string Name)>();
                    Sec.Add((Id: 0, Name: "Select Section"));
                    Sec.Add((Id: 1, Name: "A"));
                    Sec.Add((Id: 2, Name: "B"));
                    Sec.Add((Id: 3, Name: "C"));
                    Sec.Add((Id: 4, Name: "D"));


                }
                @Html.DropDownList("Sec", Sec.Select(p => new SelectListItem() { Text = p.Name, Value = p.Name.ToString() }), new { @class = "form-control", data_style = "btn-default btn-xs", tabindex = '4', data_search = "true", data_width = "100%" })

            </div>



            <div class="form-group form-group-xs col-md-2">
                <label>Roll No<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.RollNo, new { @class = "form-control", type = "text", required = "required" })

            </div>








        </div>
    </div>




    <div class="row">



        <div class="form-group form-group-xs col-md-12">




            <div class="form-group form-group-xs col-md-4">
                <label>Panel<b class="wysiwyg-color-red"></b></label>
                @{
                    List<ZCLINIC.Areas.Master.Models.Panel> Panel = new ZCLINIC.Areas.Master.Models.Panel().Master_PanelGetAll(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());

                }
                @Html.DropDownList("PanelId", Panel.Select(s => new SelectListItem() { Text = s.PName, Value = s.PId.ToString() }), new { @class = "form-control " })

            </div>



            <div class="form-group form-group-xs col-md-4">
                <label>Level<b class="wysiwyg-color-red"></b></label>
                @{
                    List<ZCLINIC.Areas.Master.Models.Levels> Levels = new ZCLINIC.Areas.Master.Models.Levels().Master_LevelsGetAll(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());

                }
                @Html.DropDownList("LevelId", Levels.Select(s => new SelectListItem() { Text = s.LevelName, Value = s.LId.ToString() }), new { @class = "form-control " })

            </div>
            <div class="form-group form-group-xs col-md-2">
                <label>Date Leaving <b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.DateLeaving, new { @class = "form-control", type = "date", required = "required" })

            </div>


            <div class="form-group form-group-xs col-md-2">
                <label>Status<b class="wysiwyg-color-red"></b></label>
                @{

                    var Status = new List<(int Id, string Name)>();
                    Status.Add((Id: 0, Name: "Select StatUs"));
                    Status.Add((Id: 1, Name: "Present"));
                    Status.Add((Id: 2, Name: "Left"));



                }
                @Html.DropDownList("LeaveF", Status.Select(p => new SelectListItem() { Text = p.Name, Value = p.Id.ToString() }), new { @class = "form-control", data_style = "btn-default btn-xs", tabindex = '4', data_search = "true", data_width = "100%" })

            </div>







        </div>
    </div>



    <div class="row">



        <div class="form-group form-group-xs col-md-12">






            <div class="form-group form-group-xs col-md-4">
                <label>Month Name<b class="wysiwyg-color-red"></b></label>

                @{
                    List<ZCLINIC.Areas.Master.Models.AcadmicYear> AcadmicYear = new ZCLINIC.Areas.Master.Models.AcadmicYear().Master_AcadmicYearGetAll(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());

                }
                @Html.DropDownList("MonthId", AcadmicYear.Select(s => new SelectListItem() { Text = s.FeesTerm, Value = s.Id.ToString() }), new { @class = "form-control " })




            </div>
            <div class="form-group form-group-xs col-md-2">
                <label>Opening Amt<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.OpenAmt, new { @class = "form-control", type = "text", required = "required" })

            </div>


            <div class="form-group form-group-xs col-md-2">
                <label>Discount <b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.MDisAmt, new { @class = "form-control", type = "text", required = "required" })

            </div>

            <div class="form-group form-group-xs col-md-2">
                <label>Transport  Amt<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.TransportAmt, new { @class = "form-control", type = "text", required = "required" })

            </div>



            <div class="form-group form-group-xs col-md-2">
                <label>RefId<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.RefId, new { @class = "form-control", type = "text", @readonly = true })

            </div>






        </div>
    </div>

    <div class="row">



        <div class="form-group form-group-xs col-md-12">

            <div class="form-group form-group-xs col-md-4">
                <label>Remarks<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control", type = "text", required = "required" })

            </div>


            <div class="form-group form-group-xs col-md-2">
                <label>Plan Name<b class="wysiwyg-color-red"></b></label>

                @{
                    List<ZCLINIC.Areas.Transaction.Models.PlanMaster> PlanMaster = new ZCLINIC.Areas.Transaction.Models.PlanMaster().Transaction_PlanMasterGetAll(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());

                }
                @Html.DropDownList("PlanId", PlanMaster.Select(s => new SelectListItem() { Text = s.PlanName, Value = s.PlanId.ToString() }), new { @class = "form-control " })




            </div>

            <div class="form-group form-group-xs col-md-2">
                <label>SeatNo<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.SeatNo, new { @class = "form-control", type = "text", required = "required" })

            </div>

            <div class="form-group form-group-xs col-md-2">
                <label>Monthly Panel Amt<b class="wysiwyg-color-red"></b></label>
                @Html.TextBoxFor(m => m.CloseingAmt, new { @class = "form-control", type = "text", required = "required" })

            </div>






        </div>
    </div>










    <div class="modal-footer mt-10 no-padding no-border">



        <button type="button" class="btn btn-danger btn-xs" data-dismiss="modal"><i class="icon-cross"></i>Close</button>
        <button type="button" data-submit="true" class="btn btn-primary  btn-xs"><i class="icon-floppy-disk position-left"></i>Save</button>
        @* <button type="button" data-submit="" class="btn btn-primary btn-xs SaveBtn"><i class="icon-floppy-disk position-left"></i>Save</button>*@

    </div>

</form>



<script>






    $('#CellNo').formatter({
        pattern: '{{9999}}-{{9999999}}'
    });

    $('#PhoneNo').formatter({
        pattern: '{{9999}}-{{9999999}}'
    });












    //document.getElementById('DOBrith').valueAsDate = new Date();
    //document.getElementById('AdDate').valueAsDate = new Date();
    //document.getElementById('DateLeaving').valueAsDate = new Date();
    if ($('#GRId').val() > 0) {
        //  
       
    }
    else {

        document.getElementById('DOBrith').valueAsDate = new Date();
        document.getElementById('AdDate').valueAsDate = new Date();
        document.getElementById('DateLeaving').valueAsDate = new Date();

        $('#StudentName').focus();
        //$('#UserName').val($('#personName').text());
        //$('#UserId').val($('#personId').val())


    }



</script>




