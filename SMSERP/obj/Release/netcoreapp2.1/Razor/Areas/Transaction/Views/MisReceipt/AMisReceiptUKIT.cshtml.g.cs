#pragma checksum "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ba0d83b8392046c473a390e6310c8894382246f1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Transaction_Views_MisReceipt_AMisReceiptUKIT), @"mvc.1.0.view", @"/Areas/Transaction/Views/MisReceipt/AMisReceiptUKIT.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Transaction/Views/MisReceipt/AMisReceiptUKIT.cshtml", typeof(AspNetCore.Areas_Transaction_Views_MisReceipt_AMisReceiptUKIT))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
using SMSERP;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ba0d83b8392046c473a390e6310c8894382246f1", @"/Areas/Transaction/Views/MisReceipt/AMisReceiptUKIT.cshtml")]
    public class Areas_Transaction_Views_MisReceipt_AMisReceiptUKIT : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<SMSERP.Areas.Transaction.Models.MisReceipt>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(66, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
  
    string URL = Model == null ? "/Transaction/MisReceipt/SaveMisReceipt" : "/Transaction/MisReceipt/UpdateMisReceipt";
    int counter = 0;

#line default
#line hidden
            BeginContext(218, 373, true);
            WriteLiteral(@"
<style>
    /*Remove Arrows/Spinners from type number*/
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<form method=""post"" data-url=""");
            EndContext();
            BeginContext(592, 3, false);
#line 24 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
                         Write(URL);

#line default
#line hidden
            EndContext();
            BeginContext(595, 146, true);
            WriteLiteral("\" data-rurl=\"/Transaction/MisReceipt/IndexUKIT\" data-script=\"/assets/Areas/Transaction/Receipt/MisIndexUKIT.js\" data-display=\"MisReceipt\">\r\n\r\n\r\n\r\n");
            EndContext();
            BeginContext(778, 242, true);
            WriteLiteral("    <div class=\"row\">\r\n\r\n\r\n\r\n        <div class=\"form-group form-group-xs col-md-12\">\r\n\r\n            <div class=\"form-group form-group-xs col-md-6\">\r\n                <label>Receipt No<b class=\"wysiwyg-color-red\"></b></label>\r\n                ");
            EndContext();
            BeginContext(1021, 100, false);
#line 37 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
           Write(Html.TextBoxFor(m => m.Receipt_no, new { @class = "form-control", type = "text", @readonly = true }));

#line default
#line hidden
            EndContext();
            BeginContext(1121, 181, true);
            WriteLiteral("\r\n\r\n            </div>\r\n\r\n            <div class=\"form-group form-group-xs col-md-6\">\r\n                <label>Receipt Date<b class=\"wysiwyg-color-red\"></b></label>\r\n                ");
            EndContext();
            BeginContext(1303, 106, false);
#line 43 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
           Write(Html.TextBoxFor(m => m.ReceiptDate, new { @class = "form-control", type = "date", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(1409, 310, true);
            WriteLiteral(@"

            </div>





        </div>
    </div>

    <div class=""row"">



        <div class=""form-group form-group-xs col-md-12"">


            <div class=""form-group form-group-xs col-md-4"">
                <label>Admission No<b class=""wysiwyg-color-red""></b></label>
                ");
            EndContext();
            BeginContext(1720, 107, false);
#line 63 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
           Write(Html.TextBoxFor(m => m.Admission_no, new { @class = "form-control", type = "text", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(1827, 171, true);
            WriteLiteral("\r\n\r\n            </div>\r\n            <div class=\"form-group form-group-xs col-md-4\">\r\n                <label>Name<b class=\"wysiwyg-color-red\"></b></label>\r\n                ");
            EndContext();
            BeginContext(1999, 99, false);
#line 68 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
           Write(Html.TextBoxFor(m => m.Name, new { @class = "form-control", type = "text", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(2098, 176, true);
            WriteLiteral("\r\n\r\n            </div>\r\n            <div class=\"form-group form-group-xs col-md-4\">\r\n                <label>Mobile No<b class=\"wysiwyg-color-red\"></b></label>\r\n                ");
            EndContext();
            BeginContext(2275, 103, false);
#line 73 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
           Write(Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control", type = "text", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(2378, 286, true);
            WriteLiteral(@"

            </div>


        </div>
    </div>
    <div class=""row"">
        <div class=""form-group form-group-xs col-md-12"">
            <div class=""form-group form-group-xs col-md-6"">
                <label>Amount<b class=""wysiwyg-color-red""></b></label>
                ");
            EndContext();
            BeginContext(2665, 98, false);
#line 84 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
           Write(Html.TextBoxFor(m => m.Amt, new { @class = "form-control", type = "text", required = "required" }));

#line default
#line hidden
            EndContext();
            BeginContext(2763, 173, true);
            WriteLiteral("\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div class=\"form-group form-group-xs col-md-6\">\r\n                <label>Income Account<b class=\"wysiwyg-color-red\"></b></label>\r\n");
            EndContext();
#line 93 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
                  
                    List<SMSERP.Areas.Master.Models.Master_SubAccount> Master_SubAccount = new SMSERP.Areas.Master.Models.Master_SubAccount().Master_SubAccountGetIncomeMaster(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());


                

#line default
#line hidden
            BeginContext(3223, 16, true);
            WriteLiteral("                ");
            EndContext();
            BeginContext(3240, 170, false);
#line 98 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
           Write(Html.DropDownList("CreditId", Master_SubAccount.Select(s => new SelectListItem() { Text = s.Subacc_Name, Value = s.Com_id.ToString() }), new { @class = "form-control " }));

#line default
#line hidden
            EndContext();
            BeginContext(3410, 296, true);
            WriteLiteral(@"

            </div>



        </div>
    </div>






    <div class=""row"">
        <div class=""form-group form-group-xs col-md-12"">



            <div class=""form-group form-group-xs col-md-6"">
                <label>Bank Account<b class=""wysiwyg-color-red""></b></label>
");
            EndContext();
#line 119 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
                  
                    List<SMSERP.Areas.Master.Models.Master_SubAccount> MasterSubAccount = new SMSERP.Areas.Master.Models.Master_SubAccount().Master_SubAccountGetBankMaster(Context.Session.GetBValues(), Context.GetIP(), Context.GetCInfo());


                

#line default
#line hidden
            BeginContext(3990, 16, true);
            WriteLiteral("                ");
            EndContext();
            BeginContext(4007, 168, false);
#line 124 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
           Write(Html.DropDownList("DebitId", MasterSubAccount.Select(s => new SelectListItem() { Text = s.Subacc_Name, Value = s.Com_id.ToString() }), new { @class = "form-control " }));

#line default
#line hidden
            EndContext();
            BeginContext(4175, 177, true);
            WriteLiteral("\r\n\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group form-group-xs col-md-6\">\r\n                <label>Ref No<b class=\"wysiwyg-color-red\"></b></label>\r\n                ");
            EndContext();
            BeginContext(4353, 95, false);
#line 131 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
           Write(Html.TextBoxFor(m => m.RefId, new { @class = "form-control", type = "text", @readonly = true }));

#line default
#line hidden
            EndContext();
            BeginContext(4448, 309, true);
            WriteLiteral(@"

            </div>


        </div>
    </div>


    <div class=""row"">
            <div class=""form-group form-group-xs col-md-12"">

                <div class=""form-group form-group-xs col-md-2"">
                    <label>GroupId<b class=""wysiwyg-color-red""></b></label>
                    ");
            EndContext();
            BeginContext(4758, 121, false);
#line 145 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
               Write(Html.TextBoxFor(m => m.group_id, new { @class = "form-control", type = "text", required = "required", @readonly = true }));

#line default
#line hidden
            EndContext();
            BeginContext(4879, 192, true);
            WriteLiteral("\r\n\r\n                </div>\r\n                <div class=\"form-group form-group-xs col-md-4\">\r\n                    <label>GroupName<b class=\"wysiwyg-color-red\"></b></label>\r\n                    ");
            EndContext();
            BeginContext(5072, 123, false);
#line 150 "C:\Users\Administrator\Documents\GitHub\SMSERP\SMSERP\Areas\Transaction\Views\MisReceipt\AMisReceiptUKIT.cshtml"
               Write(Html.TextBoxFor(m => m.group_name, new { @class = "form-control", type = "text", required = "required", @readonly = true }));

#line default
#line hidden
            EndContext();
            BeginContext(5195, 610, true);
            WriteLiteral(@"

                </div>
                <div class=""form-group form-group-xs mt-20 col-md-1"">
                    <a class=""btn btn-info btn-sm"" id=""AddItemBtn""><i class=""icon-add mr-5""></i>Add Group</a>
                </div>


            </div>
      </div>




    <div class=""modal-footer mt-10 no-padding no-border"">



        <button type=""button"" class=""btn btn-danger btn-xs"" data-dismiss=""modal""><i class=""icon-cross""></i>Close</button>
        <button type=""button"" data-submit=""true"" class=""btn btn-primary  btn-xs""><i class=""icon-floppy-disk position-left""></i>Save</button>
");
            EndContext();
            BeginContext(5955, 5868, true);
            WriteLiteral(@"
    </div>

</form>
<script>
    $('#MobileNo').formatter({
        pattern: '{{9999}}-{{9999999}}'
    });

   // document.getElementById('Edate').valueAsDate = new Date();
    $('#Admission_no').keyup(function (e) {


        var id = $(this).val();


        if (id != '' && e.keyCode == 13)
            GetPurchaseByOrderNo(id);
    })
    function GetPurchaseByOrderNo(id) {

        GetJSONRequest('/Master/Student/StudentGrId', 'GET', { id }, data => {
      //  console.log(data);


        if (data && data.length > 0) {



            $('#Name').val(data[0].Name);
            

         //   $('#Name').attr('disabled', 'true');
            //$('#Remarks').val(data[0].Remarks);

            //const refid = data[0].RefId || 0;
            //$('#RefId').val(refid).change();

          //  return;
        }

        else {
            ErrorAlert('No Record Found');
        }

    })


    }


    if ($('#Receipt_no').val() > 0) {






            //d");
            WriteLiteral(@"ocument.getElementById('OrderDate').valueAsDate = new Date();
            //document.getElementById('Send_Date').valueAsDate = new Date();
            //document.getElementById('Bill_Date').valueAsDate = new Date();



        }
        else {

            document.getElementById('ReceiptDate').valueAsDate = new Date();


            //$('tbody.tbodytable tr').each(function () {
            //    let store = $(this).children().eq(15);
            //    $(store).find('.Store').val($(store).find('.StoreId').val()).change();
            //})
            //debugger;
            //$('#UserName').val($('#personName').text());
            //$('#UserId').val($('#personId').val())


      }














    $('#AddItemBtn').click(() => {


        GetJSONRequest('/Master/Levels/Master_LevelsGetActiveAll', 'GET', '', function (data) {

            if (data && data.length > 0) {


                debugger;

                AllowSearch(data);


            }


        ");
            WriteLiteral(@"    else

                ErrorAlert(""No Data Found"");
        })







    })

















    function AllowSearch(data) {

        debugger;
        //$('#UnitId').val('');
        //$('#UnitName').val('');
        //$('#PlotNo').val('');
        //$('#SName').val('');


        $('#SModal').modal('show');
        $('.modal-dialog').addClass('modal-lg');

        $('#SModalTitle').text('Student List');
        let markup = `<div class=""row"">
         
                   <div class=""col-sm-3"">
                    <div class=""input-group "">
                        <input type=""text"" class=""form-control datasearch"" placeholder=""Filter"" id=""FilterInputoptpurchase"">
                        <span class=""input-group-addon bg-blue-800""><i class=""icon-search4""></i></span>
                    </div>
                </div></div><table id=""myTable"" class=""table datatable-basic table-xxs table-md table-bordered table-striped table-hover bg-lightgray dataTables_scrol");
            WriteLiteral(@"lBody"">
				<thead>
					<tr class=""bg-blue-800"">
                        <th>GroupId</th>
                        <th>GroupCode</th>

                        <th>Group Name</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>TimeIn</th>
                        <th>TimeOut</th>
						
						
                        
                        <th>Actions</th>

					</tr>
				</thead><tbody>`;

        data.forEach((item) => {

            markup += `<tr><td>${item.LId}</td><td>${item.LCode}</td><td>${item.LevelName}</td><td>${item.Sdate}</td><td>${item.Edate}</td><td>${item.TimeIn}</td><td>${item.TimeOut}</td><td><button type=""button"" class=""selectAllowId btn btn-primary"" id=${item.LId}>Select</button></td></tr>`

        })
        markup += `</tbody>`;
        $('#SModalBody').empty();

        $('#SModalBody').append(markup);

        $.extend($.fn.dataTable.defaults, {
            responsive: true,
            a");
            WriteLiteral(@"utoWidth: false,

            dom: '<""datatable-header""><""datatable-scroll-wrap""t><""datatable-footer""lip>',

        });

        purchasetable = $('.datatable-basic').DataTable({

            buttons: {
                dom: {
                    button: {
                        className: 'btn btn-default'
                    }
                },
                buttons: [

                    'excelHtml5',
                    'csvHtml5',
                    {
                        extend: 'pdfHtml5',
                        orientation: 'portrait',
                        pageSize: 'A4',
                        exportOptions: {
                            columns: ':not(:last-child)',
                        },
                        customize: function (doc) {
                            doc.defaultStyle.fontSize = 7;
                        }
                    }]

            },
            language: {
                search: '<span>Filter:</span> _INPUT_',
         ");
            WriteLiteral(@"       lengthMenu: '_MENU_',
            },
            ""lengthMenu"": [[10, 25, 50, -1], [10, 25, 50, ""All""]]

        });

        $('#SModalBody').delegate('#FilterInputoptpurchase', 'keyup', function () {
            debugger;

            purchasetable.search(this.value).draw();
        });

        $('#SModal').on('hidden.bs.modal', function (e) {
            debugger;
            purchasetable.search('').draw();
        })
    }
    $('#SModalBody').delegate('.selectAllowId', 'click', function () {

        $('#group_id').val($(this).closest('tr').children().eq(0).text());
        $('#group_name').val($(this).closest('tr').children().eq(2).text());

        $('#SModal').modal('hide');
    })




</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SMSERP.Areas.Transaction.Models.MisReceipt> Html { get; private set; }
    }
}
#pragma warning restore 1591
